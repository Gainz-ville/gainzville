name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  DROPLET_NAME: gainzville1
  CLIENT_IMAGE_NAME: gainzville
  SERVER_IMAGE_NAME: gainzville-server
  DOCKER_TAG: docker.pkg.github.com/${{ github.repository }}
  VERSION: latest

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build client image
        run: docker build . --file Dockerfile --tag $DOCKER_TAG/$CLIENT_IMAGE_NAME:$VERSION

      - name: Build server image
        run: docker build . --file DockerfileServer --tag $DOCKER_TAG/$SERVER_IMAGE_NAME:$VERSION
                
      - name: Show Docker Images
        run: docker images
          
      - name: Push client image
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          CLIENT_TAG=$DOCKER_TAG/$CLIENT_IMAGE_NAME:$VERSION
          docker push $CLIENT_TAG
        
      - name: Push server image
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          SERVER_TAG=$DOCKER_TAG/$SERVER_IMAGE_NAME:$VERSION
          docker push $SERVER_TAG
          
      - name: Clean images and containers
        uses: appleboy/ssh-action@master
        with:
          envs: CLIENT_IMAGE_NAME,SERVER_IMAGE_NAME,DOCKER_TAG
          host: ${{ secrets.DROPLET_HOST }}
          username: root
          passphrase: ${{ secrets.DROPLET_PASSPHRASE }}
          key: ${{ secrets.DROPLET_PRIVATE }} 
          script: |
            if [ docker ps -q --filter "name=$CLIENT_IMAGE_NAME" ]
            then
              docker stop $CLIENT_IMAGE_NAME
              docker rm -fv $CLIENT_IMAGE_NAME
              docker rmi -f $DOCKER_TAG/$CLIENT_IMAGE_NAME
            fi
            
            if [ docker ps -q --filter "name=$SERVER_IMAGE_NAME" ]
            then
              docker stop $SERVER_IMAGE_NAME
              docker rm -fv $SERVER_IMAGE_NAME
              docker rmi -f $DOCKER_TAG/$SERVER_IMAGE_NAME
            fi
            
      - name: Pull and run client
        uses: appleboy/ssh-action@master
        with:
          envs: CLIENT_IMAGE_NAME,DOCKER_TAG
          host: ${{ secrets.DROPLET_HOST }}
          username: root
          passphrase: ${{ secrets.DROPLET_PASSPHRASE }}
          key: ${{ secrets.DROPLET_PRIVATE }}
          script: |
            docker login docker.pkg.github.com --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
            docker pull $DOCKER_TAG/$CLIENT_IMAGE_NAME
            docker run --name $CLIENT_IMAGE_NAME -p 80:80 -d $DOCKER_TAG/$CLIENT_IMAGE_NAME
            
      - name: Pull and run server
        uses: appleboy/ssh-action@master
        with:
          envs: SERVER_IMAGE_NAME,DOCKER_TAG
          host: ${{ secrets.DROPLET_HOST }}
          username: root
          passphrase: ${{ secrets.DROPLET_PASSPHRASE }}
          key: ${{ secrets.DROPLET_PRIVATE }} 
          script: |
            docker login docker.pkg.github.com --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
            docker pull $DOCKER_TAG/$SERVER_IMAGE_NAME
            docker run --name $SERVER_IMAGE_NAME -p 5050:80 -d $DOCKER_TAG/$SERVER_IMAGE_NAME
